stages:
  - build
  - test

build:
  stage: build
  script:
    - 'test -f frontend/index.html'
    - echo "Phase 1 CI"

test:
  stage: test
  image: node:20
  before_script:
    - cd frontend
    # The .npmrc file will handle the legacy-peer-deps automatically
    - npm install
  script:
    - npm run test:ci-simple
    - echo "Test verification complete"

test_selenium:
  stage: test
  image: python:3.9
  before_script:
    - apt-get update && apt-get install -y wget unzip
    # Install Chrome properly
    - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt-get install -y ./google-chrome-stable_current_amd64.deb
    # Install chromedriver
    - CHROME_VERSION=$(google-chrome-stable --version | awk '{print $3}' | cut -d. -f1-3)  # Get major version (e.g., 134.0.6998)
    - CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)  # Get the matching chromedriver version
    - wget -q https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip
    - mv chromedriver /usr/local/bin/
    - chmod +x /usr/local/bin/chromedriver
    # Install Python requirements
    - pip install --upgrade pip
    - pip install -r frontend/selenium_tests/requirements.txt
  script:
    - cd frontend/selenium_tests
    - python frontendAcceptanceTests.py




test_postman:
    stage: test
    image: 
      name: postman/newman:alpine
      entrypoint: [""]
    before_script:
      - cd backend
    script:
      - newman run wildwareness_api.json



